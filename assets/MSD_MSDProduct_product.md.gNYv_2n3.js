import{_ as a,c as e,o as n,l as t,ab as s,a as o}from"./chunks/framework.Dsgp4YlQ.js";const i="/portfolio/images/MSDProduct.drawio.png",m=JSON.parse('{"title":"⚙️MSD Production","description":"","frontmatter":{},"headers":[],"relativePath":"MSD/MSDProduct/product.md","filePath":"MSD/MSDProduct/product.md","lastUpdated":null}'),l={name:"MSD/MSDProduct/product.md"};function d(h,r,g,c,u,b){return n(),e("div",null,r[0]||(r[0]=[t("h1",{id:"⚙️msd-production",tabindex:"-1"},[o("⚙️MSD Production "),t("a",{class:"header-anchor",href:"#⚙️msd-production","aria-label":'Permalink to "⚙️MSD Production"'},"​")],-1),t("h2",{id:"_1-시연-영상",tabindex:"-1"},[o("1. 시연 영상 "),t("a",{class:"header-anchor",href:"#_1-시연-영상","aria-label":'Permalink to "1. 시연 영상"'},"​")],-1),t("iframe",{width:"668",height:"365",src:"https://www.youtube.com/embed/09i1BvOvtYE?si=1AxBVmZhJDsnUUdj",title:"YouTube video player",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share",referrerpolicy:"strict-origin-when-cross-origin",allowfullscreen:""},null,-1),s('<hr><h2 id="_2-개요" tabindex="-1">2. 개요 <a class="header-anchor" href="#_2-개요" aria-label="Permalink to &quot;2. 개요&quot;">​</a></h2><p>엣지 클라이언트 Production은 <strong>생산 공정 제어 및 모니터링</strong>을 위한 인터페이스입니다.<br> 이 시스템을 통해 <strong>작업자는 생산 계획을 조회하고, 제품 모델을 선택하여 생산을 시작</strong>할 수 있습니다.<br> 또한, <strong>실시간으로 공정 데이터를 서버로 전송</strong>하여 공정 관리를 최적화할 수 있도록 설계되었습니다.</p><hr><h2 id="_3-주요-기능" tabindex="-1">3. 주요 기능 <a class="header-anchor" href="#_3-주요-기능" aria-label="Permalink to &quot;3. 주요 기능&quot;">​</a></h2><h3 id="🔹-설비-제어-및-로그인-검증" tabindex="-1"><strong>🔹 설비 제어 및 로그인 검증</strong> <a class="header-anchor" href="#🔹-설비-제어-및-로그인-검증" aria-label="Permalink to &quot;**🔹 설비 제어 및 로그인 검증**&quot;">​</a></h3><ul><li><strong>설비를 조작하려면 로그인 인증을 거쳐야 함</strong></li><li><strong>권한이 없는 사용자는 HMI에서 조작 불가</strong></li><li><strong>보안 강화를 위한 사용자 인증 시스템 적용</strong></li></ul><h3 id="🔹-네트워크-설정-및-plc-온도-제어" tabindex="-1"><strong>🔹 네트워크 설정 및 PLC/온도 제어</strong> <a class="header-anchor" href="#🔹-네트워크-설정-및-plc-온도-제어" aria-label="Permalink to &quot;**🔹 네트워크 설정 및 PLC/온도 제어**&quot;">​</a></h3><ul><li><strong>PLC 제어:</strong> 이더넷(Industrial Ethernet) 연결</li><li><strong>온도 컨트롤러 및 인버터 제어:</strong> RS485(Modbus RTU) 연결</li><li><strong>HMI에서 설정한 목표 온도에 맞춰 자동 온도 조절</strong></li><li><strong>온도 편차에 따라 인버터 가동/정지 자동화</strong></li></ul><h3 id="🔹-생산-계획-및-lot-관리" tabindex="-1"><strong>🔹 생산 계획 및 LOT 관리</strong> <a class="header-anchor" href="#🔹-생산-계획-및-lot-관리" aria-label="Permalink to &quot;**🔹 생산 계획 및 LOT 관리**&quot;">​</a></h3><ul><li><strong>사무실 관리자가 수립한 일일 생산 계획을 조회 가능</strong></li><li><strong>작업자가 생산할 제품 모델을 선택하고, LOT 번호를 발급받아 생산 시작</strong></li><li><strong>LOT 번호를 기반으로 품질 이슈 추적 가능</strong></li></ul><h3 id="🔹-실시간-데이터-전송-및-모니터링" tabindex="-1"><strong>🔹 실시간 데이터 전송 및 모니터링</strong> <a class="header-anchor" href="#🔹-실시간-데이터-전송-및-모니터링" aria-label="Permalink to &quot;**🔹 실시간 데이터 전송 및 모니터링**&quot;">​</a></h3><ul><li><strong>현재 공정 상태 및 생산량을 실시간으로 서버로 전송</strong></li><li><strong>RabbitMQ(MQTT 프로토콜)와 CRUX 서버를 통해 생산 데이터를 저장 및 분석</strong></li><li><strong>생산량, 공정 조건, 작업 상태 등을 서버에서 실시간 모니터링 가능</strong></li></ul><hr><h2 id="_4-프로세스-및-멀티쓰레드-동시-제어" tabindex="-1">4. 프로세스 및 멀티쓰레드 동시 제어 <a class="header-anchor" href="#_4-프로세스-및-멀티쓰레드-동시-제어" aria-label="Permalink to &quot;4. 프로세스 및 멀티쓰레드 동시 제어&quot;">​</a></h2><p>생산 HMI는 <strong>여러 개의 작업이 동시에 수행되어야 하므로, C# 기반의 멀티쓰레드 병렬 처리 방식</strong>을 사용하여 안정적인 동작을 구현하였습니다.</p><p><img src="'+i+'" alt="멀티쓰레드 병렬처리"></p><h3 id="🔹-멀티쓰레드-기반-실시간-병렬-처리" tabindex="-1">🔹 <strong>멀티쓰레드 기반 실시간 병렬 처리</strong> <a class="header-anchor" href="#🔹-멀티쓰레드-기반-실시간-병렬-처리" aria-label="Permalink to &quot;🔹 **멀티쓰레드 기반 실시간 병렬 처리**&quot;">​</a></h3><table><thead><tr><th>작업 쓰레드</th><th>설명</th></tr></thead><tbody><tr><td><strong>공정제어 쓰레드</strong></td><td>UI에서 조작한 공정 데이터를 PLC로 전송</td></tr><tr><td><strong>메시지 발행 쓰레드</strong></td><td>RabbitMQ(MQTT 프로토콜)를 사용해 생산 메시지 전송</td></tr><tr><td><strong>누적 생산량 전송 쓰레드</strong></td><td>TCP 소켓을 이용해 CRUX 서버에 생산량 데이터 저장</td></tr><tr><td><strong>온도/인버터 제어 쓰레드</strong></td><td>Modbus RTU 프로토콜로 온도 제어 및 인버터 상태 관리</td></tr></tbody></table><hr><h2 id="_5-결론" tabindex="-1">5. 결론 <a class="header-anchor" href="#_5-결론" aria-label="Permalink to &quot;5. 결론&quot;">​</a></h2><p>✅ <strong>생산 공정을 실시간으로 모니터링하고 제어할 수 있는 HMI 구축</strong><br> ✅ <strong>사용자 권한 기반의 로그인 시스템 적용으로 보안 강화</strong><br> ✅ <strong>PLC 및 온도/인버터 장비를 네트워크로 연결하여 제어 가능</strong><br> ✅ <strong>RabbitMQ와 TCP 소켓을 활용하여 실시간 데이터 전송 및 서버 연동</strong><br> ✅ <strong>C# 기반 멀티쓰레드 병렬 처리로 안정적인 시스템 동작 구현</strong></p><p>CRUX 서버의 생산 HMI는 <strong>효율적인 공정 관리 및 생산 데이터 모니터링을 위한 핵심 도구</strong>로 활용될 수 있도록 설계되었습니다. 🚀</p>',23)]))}const P=a(l,[["render",d]]);export{m as __pageData,P as default};
