import{_ as t,c as a,o as r,ab as o}from"./chunks/framework.Dsgp4YlQ.js";const n="/portfolio/gangchew/gangchew_%EC%95%84%ED%82%A4%ED%85%8D%EC%B2%98.png",p=JSON.parse('{"title":"🏗️GangChew 아키텍처","description":"","frontmatter":{},"headers":[],"relativePath":"GangChew/GangChewArchitecture/architecture.md","filePath":"GangChew/GangChewArchitecture/architecture.md","lastUpdated":null}'),i={name:"GangChew/GangChewArchitecture/architecture.md"};function h(l,e,c,s,g,u){return r(),a("div",null,e[0]||(e[0]=[o('<h1 id="🏗️gangchew-아키텍처" tabindex="-1">🏗️GangChew 아키텍처 <a class="header-anchor" href="#🏗️gangchew-아키텍처" aria-label="Permalink to &quot;🏗️GangChew 아키텍처&quot;">​</a></h1><h2 id="gangchew-아키텍처-구성" tabindex="-1">GangChew 아키텍처 구성 <a class="header-anchor" href="#gangchew-아키텍처-구성" aria-label="Permalink to &quot;GangChew 아키텍처 구성&quot;">​</a></h2><p><img src="'+n+'" alt="GangChew 아키텍처"></p><p>이 프로젝트는 <strong>웹 서버(Spring Boot)</strong> 및 <strong>외부 API 서버</strong>를 적극적으로 활용하여 확장성과 유연성을 극대화하였습니다. 웹 클라이언트는 OAuth를 이용한 <strong>소셜 로그인(Kakao, Naver)</strong> 기능을 제공하며, 결제 시스템은 <strong>I&#39;mPort 결제 모듈</strong>을 통해 안전하게 처리됩니다.</p><h3 id="oauth-로그인-연동" tabindex="-1"><strong>OAuth 로그인 연동</strong> <a class="header-anchor" href="#oauth-로그인-연동" aria-label="Permalink to &quot;**OAuth 로그인 연동**&quot;">​</a></h3><ol><li>사용자가 로그인 요청을 하면 OAuth 서버에서 Authorization Code를 발급합니다.</li><li>WebClient는 Authorization Code를 WebServer로 전달합니다.</li><li>WebServer는 해당 코드를 이용해 OAuth 서버에서 Access Token을 요청하고 응답을 받습니다.</li><li>인증이 완료되면 로그인 성공/실패 여부를 WebClient에 반환합니다.</li></ol><h3 id="결제-시스템-연동-i-mport" tabindex="-1"><strong>결제 시스템 연동 (I&#39;mPort)</strong> <a class="header-anchor" href="#결제-시스템-연동-i-mport" aria-label="Permalink to &quot;**결제 시스템 연동 (I&#39;mPort)**&quot;">​</a></h3><ol><li>WebClient에서 사용자가 결제를 요청하면 WebServer에 전달됩니다.</li><li>WebServer는 I&#39;mPort 결제 API를 호출하여 결제 검증을 진행합니다.</li><li>I&#39;mPort 서버에서 결제 검증 요청을 수행하고 결과를 WebServer로 반환합니다.</li><li>WebServer는 최종 결제 완료 여부를 WebClient에 전달합니다.</li></ol><hr><p>이와 같은 구조를 통해 <strong>웹 클라이언트 - 웹 서버 - 외부 API 서버</strong> 간의 원활한 연동을 구현하였으며, 높은 신뢰성과 보안성을 유지할 수 있도록 설계되었습니다.</p>',10)]))}const m=t(i,[["render",h]]);export{p as __pageData,m as default};
