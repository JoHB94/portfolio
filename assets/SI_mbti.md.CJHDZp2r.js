import{_ as t,C as r,c as a,o as i,ab as e,G as n}from"./chunks/framework.DIOtyC_h.js";const m=JSON.parse('{"title":"MBTI 테스트 만들기","description":"","frontmatter":{},"headers":[],"relativePath":"SI/mbti.md","filePath":"SI/mbti.md","lastUpdated":null}'),d={name:"SI/mbti.md"};function s(c,o,g,h,u,p){const l=r("CarouselController");return i(),a("div",null,[o[0]||(o[0]=e('<h1 id="mbti-테스트-만들기" tabindex="-1">MBTI 테스트 만들기 <a class="header-anchor" href="#mbti-테스트-만들기" aria-label="Permalink to &quot;MBTI 테스트 만들기&quot;">​</a></h1><h2 id="내용" tabindex="-1">내용 <a class="header-anchor" href="#내용" aria-label="Permalink to &quot;내용&quot;">​</a></h2><h3 id="⬅️-slide-➡️" tabindex="-1">⬅️ SLIDE ➡️ <a class="header-anchor" href="#⬅️-slide-➡️" aria-label="Permalink to &quot;⬅️ SLIDE ➡️&quot;">​</a></h3>',3)),n(l,{category:"mbti"}),o[1]||(o[1]=e('<h2 id="📝-요구사항" tabindex="-1">📝 요구사항 <a class="header-anchor" href="#📝-요구사항" aria-label="Permalink to &quot;📝 요구사항&quot;">​</a></h2><h3 id="🔍-테스트" tabindex="-1">🔍 테스트 <a class="header-anchor" href="#🔍-테스트" aria-label="Permalink to &quot;🔍 테스트&quot;">​</a></h3><ol><li><p><strong>동의 / 비동의 선택</strong></p><ul><li><strong>Radio 버튼</strong>으로 구현 (선택 값: <code>1~7</code>)</li><li>질문 유형: <code>(EI, IE)</code>, <code>(NS, SN)</code>, <code>(FT, TF)</code>, <code>(JP, PJ)</code></li><li>유형별 <strong>페이지당 5문항씩 표시</strong></li></ul></li><li><p><strong>다음 버튼 기능</strong></p><ul><li><code>다음</code> 버튼 클릭 시 <strong>다음 5개의 질문 불러오기</strong></li><li><strong>모든 질문에 응답하지 않았을 경우</strong> → <code>alert 창 출력</code></li></ul></li><li><p><strong>결과 보기 버튼</strong></p><ul><li>마지막 페이지에서는 <code>다음</code> 버튼이 <code>결과 보기</code> 버튼으로 변경됨</li></ul></li></ol><hr><h3 id="📄-결과-페이지" tabindex="-1">📄 결과 페이지 <a class="header-anchor" href="#📄-결과-페이지" aria-label="Permalink to &quot;📄 결과 페이지&quot;">​</a></h3><ol><li><p><strong>결과 확인 후 이동</strong></p><ul><li><code>결과 보기</code> 버튼 클릭 시 <strong>메인 리스트 화면으로 이동</strong></li></ul></li><li><p><strong>MBTI 검사 결과 출력</strong></p><ul><li><strong>검사 로직을 이용하여 MBTI 결과를 계산하여 출력</strong></li><li><strong>모든 질문에 응답하지 않았을 경우</strong> → <code>alert 창 출력</code></li></ul></li></ol><hr><h2 id="⚙️-검사-로직" tabindex="-1">⚙️ 검사 로직 <a class="header-anchor" href="#⚙️-검사-로직" aria-label="Permalink to &quot;⚙️ 검사 로직&quot;">​</a></h2><h3 id="📌-점수-배치-규칙-예-e-i-유형" tabindex="-1"><strong>📌 점수 배치 규칙 (예: E/I 유형)</strong> <a class="header-anchor" href="#📌-점수-배치-규칙-예-e-i-유형" aria-label="Permalink to &quot;**📌 점수 배치 규칙 (예: E/I 유형)**&quot;">​</a></h3><ul><li><strong>E 유형 질문의 경우:</strong><ul><li><code>매우 동의</code> → <code>E: 3점</code></li><li><code>동의</code> → <code>E: 3점</code></li><li><code>약간 동의</code> → <code>E: 3점</code></li><li><code>모르겠음</code> → <code>0점</code></li><li><code>약간 비동의</code> → <code>I: 1점</code></li><li><code>비동의</code> → <code>I: 2점</code></li><li><code>매우 비동의</code> → <code>I: 3점</code></li></ul></li></ul><h3 id="📌-검사-결과-계산-방식" tabindex="-1"><strong>📌 검사 결과 계산 방식</strong> <a class="header-anchor" href="#📌-검사-결과-계산-방식" aria-label="Permalink to &quot;**📌 검사 결과 계산 방식**&quot;">​</a></h3><ol><li><p><strong>각 질문 유형의 점수 누적</strong></p><ul><li>MBTI는 4자리의 결과 값으로 이루어지며, 각 자리에는 <strong>두 가지의 옵션(E/I, N/S, F/T, J/P)이 존재</strong></li><li>각 질문 유형에 대해 <strong>선택한 값에 따라 점수를 누적</strong></li></ul></li><li><p><strong>최종 결과 도출 방식</strong></p><ul><li><code>Map</code>을 이용하여 <strong>8가지 MBTI 옵션의 점수를 저장</strong></li><li><code>2차원 배열</code>을 활용하여 <strong>각 자릿수에서 높은 점수를 가진 옵션 선택</strong></li><li><strong>점수가 동일할 경우</strong> → <strong>사전순으로 빠른 유형을 결과 값으로 입력</strong></li></ul></li></ol><hr><h2 id="🔍-구현-개요" tabindex="-1">🔍 구현 개요 <a class="header-anchor" href="#🔍-구현-개요" aria-label="Permalink to &quot;🔍 구현 개요&quot;">​</a></h2><ul><li><strong>Radio 버튼을 사용하여 1~7의 선택지 구현</strong></li><li><strong>각 유형(E/I, N/S, F/T, J/P)별 점수를 누적하여 MBTI 결과 계산</strong></li><li><strong>Map과 2차원 배열을 활용하여 최적화된 결과 선택 로직 구현</strong></li></ul><hr>',16))])}const I=t(d,[["render",s]]);export{m as __pageData,I as default};
