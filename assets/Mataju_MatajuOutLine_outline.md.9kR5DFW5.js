import{_ as t,c as r,o as e,ab as n}from"./chunks/framework.DIOtyC_h.js";const c=JSON.parse('{"title":"📖Mataju(마타유) 개요","description":"","frontmatter":{},"headers":[],"relativePath":"Mataju/MatajuOutLine/outline.md","filePath":"Mataju/MatajuOutLine/outline.md","lastUpdated":null}'),l={name:"Mataju/MatajuOutLine/outline.md"};function o(i,a,s,d,u,b){return e(),r("div",null,a[0]||(a[0]=[n('<h1 id="📖mataju-마타유-개요" tabindex="-1">📖Mataju(마타유) 개요 <a class="header-anchor" href="#📖mataju-마타유-개요" aria-label="Permalink to &quot;📖Mataju(마타유) 개요&quot;">​</a></h1><p><strong>Mataju (마타유)</strong> 는 기업이 직접 고객에게 서비스를 제공하는 B2C 방식의 공유 창고 대여 플랫폼입니다. 이 프로젝트는 AWS 수업을 들으며 배포를 경험하기 위해 팀원 4명이 협업하여 진행한 팀 프로젝트로, 실제 운영 환경과 유사한 AWS 아키텍처를 적용하였습니다.</p><h2 id="_1-팀원-소개-4인-👥" tabindex="-1">1. 팀원 소개 (4인)👥 <a class="header-anchor" href="#_1-팀원-소개-4인-👥" aria-label="Permalink to &quot;1. 팀원 소개 (4인)👥&quot;">​</a></h2><table><tbody><tr><td align="center"><strong>김카일</strong><br><small>Mataju Server 개발, 배포</small></td><td align="center"><strong>조현빈</strong><br><small>Mataju Client 개발, 배포</small></td><td align="center"><strong>한민기</strong><br><small>Mataju Client 개발, 배포</small></td><td align="center"><strong>신종덕</strong><br><small>Mataju Client 개발, 배포</small></td></tr><tr><td> - C# .NET Core<br> - DB 설계 및 구축<br> - AWS 서버 설계 및 구축<br> - 프로젝트 Api 설계 및 구축 </td><td> - C# , WPF<br> - UI 설계, 디자인<br> - AWS 서버 설계 및 구축<br> - 프로젝트 기능 구현 및 개발 </td><td> - C# , WPF<br> - UI 설계, 디자인<br> - AWS 서버 설계 및 구축<br> - 프로젝트 기능 구현 및 개발 </td><td> - C# , WPF<br> - UI 설계, 디자인<br> - AWS 서버 설계 및 구축<br> - 프로젝트 기능 구현 및 개발 </td></tr></tbody></table><h2 id="_2-프로젝트-목표" tabindex="-1">2. 프로젝트 목표 <a class="header-anchor" href="#_2-프로젝트-목표" aria-label="Permalink to &quot;2. 프로젝트 목표&quot;">​</a></h2><h3 id="aws-아키텍처-학습-및-실습" tabindex="-1">AWS 아키텍처 학습 및 실습 <a class="header-anchor" href="#aws-아키텍처-학습-및-실습" aria-label="Permalink to &quot;AWS 아키텍처 학습 및 실습&quot;">​</a></h3><p>수업에서 배운 AWS 서비스를 활용하여 실제 운영 환경과 유사한 배포 환경 구축</p><h3 id="wpf를-활용한-mvvm-패턴-개발-경험" tabindex="-1">WPF를 활용한 MVVM 패턴 개발 경험 <a class="header-anchor" href="#wpf를-활용한-mvvm-패턴-개발-경험" aria-label="Permalink to &quot;WPF를 활용한 MVVM 패턴 개발 경험&quot;">​</a></h3><p>Windows Presentation Foundation(WPF)을 활용하여 MVVM 패턴을 적용한 애플리케이션 개발 경험 축적</p><h2 id="_3-기술-스택" tabindex="-1">3. 기술 스택 <a class="header-anchor" href="#_3-기술-스택" aria-label="Permalink to &quot;3. 기술 스택&quot;">​</a></h2><ul><li><strong>언어 및 프레임워크:</strong> C#, WPF, .NET Core</li><li><strong>데이터 베이스:</strong> MySQL</li><li><strong>배포(AWS):</strong> EC2, S3, RDS ,VPC, 로드밸런서, 오토스케일링</li></ul>',11)]))}const m=t(l,[["render",o]]);export{c as __pageData,m as default};
